<mxfile host="app.diagrams.net" modified="2022-11-10T15:09:38.829Z" agent="5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36" etag="kIzbYml7pMjZRSI9cYuM" version="20.5.3" type="github">
  <diagram id="gKHhVE1iPBJTauDnVtQz" name="Page-1">
    <mxGraphModel dx="2000" dy="1308" grid="0" gridSize="20" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="1654" pageHeight="2336" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="FN8Ck3nnoSoxogU4fabU-3" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="jkbdHM3EtRgmcyWO4s81-1" target="jkbdHM3EtRgmcyWO4s81-15" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="jkbdHM3EtRgmcyWO4s81-1" value="&lt;span style=&quot;font-weight: normal;&quot;&gt;App&lt;br&gt;&lt;font style=&quot;font-size: 14px;&quot; color=&quot;#575757&quot;&gt;Main container component which all other components&amp;nbsp;are loaded within. Sets up context for React-Bootstrap, React-Query etc.&lt;/font&gt;&lt;/span&gt;" style="rounded=0;whiteSpace=wrap;html=1;labelPosition=center;verticalLabelPosition=middle;align=center;verticalAlign=top;fontStyle=1;fontSize=20;spacing=20;" parent="1" vertex="1">
          <mxGeometry x="100" y="100" width="460" height="120" as="geometry" />
        </mxCell>
        <mxCell id="FN8Ck3nnoSoxogU4fabU-40" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=1;entryY=0.5;entryDx=0;entryDy=0;labelBackgroundColor=none;strokeColor=#00CC00;exitX=0;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="FN8Ck3nnoSoxogU4fabU-57" target="jkbdHM3EtRgmcyWO4s81-15" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="FN8Ck3nnoSoxogU4fabU-5" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="jkbdHM3EtRgmcyWO4s81-16" target="jkbdHM3EtRgmcyWO4s81-19" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="jkbdHM3EtRgmcyWO4s81-16" value="&lt;font style=&quot;font-size: 14px;&quot;&gt;Router&lt;br&gt;&lt;font style=&quot;font-weight: normal;&quot; color=&quot;#575757&quot;&gt;Router contains routing configuration. It is basically a switch. It switches page components based on the browser URL.&lt;/font&gt;&lt;br&gt;&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;labelPosition=center;verticalLabelPosition=middle;align=center;verticalAlign=top;fontStyle=1;fontSize=20;spacing=20;" parent="1" vertex="1">
          <mxGeometry x="100" y="459" width="460" height="120" as="geometry" />
        </mxCell>
        <mxCell id="FN8Ck3nnoSoxogU4fabU-6" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;" parent="1" source="jkbdHM3EtRgmcyWO4s81-19" target="jkbdHM3EtRgmcyWO4s81-42" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="FN8Ck3nnoSoxogU4fabU-7" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="jkbdHM3EtRgmcyWO4s81-19" target="jkbdHM3EtRgmcyWO4s81-40" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="FN8Ck3nnoSoxogU4fabU-10" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="jkbdHM3EtRgmcyWO4s81-19" target="jkbdHM3EtRgmcyWO4s81-22" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="FN8Ck3nnoSoxogU4fabU-11" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;" parent="1" source="jkbdHM3EtRgmcyWO4s81-19" target="jkbdHM3EtRgmcyWO4s81-41" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="jkbdHM3EtRgmcyWO4s81-19" value="&lt;font style=&quot;font-size: 14px;&quot;&gt;EditorPage&lt;br&gt;&lt;font style=&quot;font-weight: normal;&quot; color=&quot;#575757&quot;&gt;Editor is the layout for our editor. It arranges sub-components.&lt;/font&gt;&lt;br&gt;&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;labelPosition=center;verticalLabelPosition=middle;align=center;verticalAlign=top;fontStyle=1;fontSize=20;spacing=20;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="99.99999999999999" y="619" width="460" height="100" as="geometry" />
        </mxCell>
        <mxCell id="FN8Ck3nnoSoxogU4fabU-14" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="jkbdHM3EtRgmcyWO4s81-22" target="jkbdHM3EtRgmcyWO4s81-23" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="jkbdHM3EtRgmcyWO4s81-22" value="&lt;font style=&quot;font-size: 14px;&quot;&gt;Survey&lt;br&gt;&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;labelPosition=center;verticalLabelPosition=middle;align=center;verticalAlign=top;fontStyle=1;fontSize=20;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="386.02" y="856" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="FN8Ck3nnoSoxogU4fabU-16" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="jkbdHM3EtRgmcyWO4s81-23" target="jkbdHM3EtRgmcyWO4s81-25" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="qK6abfEGiZvxjof2DGdg-3" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=1;entryY=0.5;entryDx=0;entryDy=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" edge="1" parent="1" source="jkbdHM3EtRgmcyWO4s81-23" target="jkbdHM3EtRgmcyWO4s81-22">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="jkbdHM3EtRgmcyWO4s81-23" value="&lt;font style=&quot;font-size: 14px;&quot;&gt;QuestionGroup&lt;br&gt;&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;labelPosition=center;verticalLabelPosition=middle;align=center;verticalAlign=top;fontStyle=1;fontSize=20;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="386.02" y="936" width="159.98" height="45" as="geometry" />
        </mxCell>
        <mxCell id="qK6abfEGiZvxjof2DGdg-1" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=1;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="jkbdHM3EtRgmcyWO4s81-25" target="jkbdHM3EtRgmcyWO4s81-23">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="jkbdHM3EtRgmcyWO4s81-25" value="&lt;font style=&quot;font-size: 14px;&quot;&gt;Question&lt;br&gt;&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;labelPosition=center;verticalLabelPosition=middle;align=center;verticalAlign=top;fontStyle=1;fontSize=20;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="474" y="1022.77" width="159.98" height="37.65" as="geometry" />
        </mxCell>
        <mxCell id="jkbdHM3EtRgmcyWO4s81-40" value="&lt;font style=&quot;font-size: 14px;&quot;&gt;SideBarLeft&lt;br&gt;&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;labelPosition=center;verticalLabelPosition=middle;align=center;verticalAlign=top;fontStyle=1;fontSize=20;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="206" y="856" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="jkbdHM3EtRgmcyWO4s81-41" value="&lt;font style=&quot;font-size: 14px;&quot;&gt;SideBarRight&lt;br&gt;&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;labelPosition=center;verticalLabelPosition=middle;align=center;verticalAlign=top;fontStyle=1;fontSize=20;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="637" y="856" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="jkbdHM3EtRgmcyWO4s81-88" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;strokeColor=none;fontSize=14;strokeWidth=10;curved=1;startArrow=none;" parent="1" target="jkbdHM3EtRgmcyWO4s81-23" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="1372" y="827.06" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="jkbdHM3EtRgmcyWO4s81-94" value="React Component Structure Overview" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=42;fontStyle=1;rounded=0;" parent="1" vertex="1">
          <mxGeometry y="6" width="800" height="60" as="geometry" />
        </mxCell>
        <mxCell id="jkbdHM3EtRgmcyWO4s81-42" value="&lt;font style=&quot;font-size: 14px;&quot;&gt;TopBar&lt;br&gt;&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;labelPosition=center;verticalLabelPosition=middle;align=center;verticalAlign=top;fontStyle=1;fontSize=20;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="26.00000000000003" y="856" width="159.98" height="40" as="geometry" />
        </mxCell>
        <mxCell id="jkbdHM3EtRgmcyWO4s81-111" value="useSurvey()&lt;br style=&quot;font-size: 19px;&quot;&gt;&lt;font color=&quot;#575757&quot;&gt;&lt;span style=&quot;font-size: 14px; font-weight: 400;&quot;&gt;This is a custom hook we create ourselves which wraps the useQuery() functionality for a specific component into its own hook. In this way we separate&amp;nbsp;data management&amp;nbsp;logic from display logic.&lt;/span&gt;&lt;br&gt;&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;labelPosition=center;verticalLabelPosition=middle;align=center;verticalAlign=top;fontStyle=1;fontSize=20;spacing=20;" parent="1" vertex="1">
          <mxGeometry x="566" y="1455" width="520" height="180" as="geometry" />
        </mxCell>
        <mxCell id="jkbdHM3EtRgmcyWO4s81-106" value="State Management Elements" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=42;fontStyle=1;rounded=0;" parent="1" vertex="1">
          <mxGeometry y="1185" width="600" height="60" as="geometry" />
        </mxCell>
        <mxCell id="jkbdHM3EtRgmcyWO4s81-109" value="useState()&lt;br style=&quot;font-size: 19px;&quot;&gt;&lt;font color=&quot;#575757&quot;&gt;&lt;span style=&quot;font-size: 14px; font-weight: 400;&quot;&gt;This is a hook provided by React and is generally used to manage state within a single component. It allows you to define a default state value and a setter for that value. Whenever you call the setter to mutate the value the containing component will re-render.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;labelPosition=center;verticalLabelPosition=middle;align=center;verticalAlign=top;fontStyle=1;fontSize=20;spacing=20;" parent="1" vertex="1">
          <mxGeometry x="26" y="1255" width="520" height="180" as="geometry" />
        </mxCell>
        <mxCell id="jkbdHM3EtRgmcyWO4s81-110" value="useQuery()&lt;br style=&quot;font-size: 19px;&quot;&gt;&lt;font color=&quot;#575757&quot;&gt;&lt;span style=&quot;font-size: 14px; font-weight: 400;&quot;&gt;This is a hook provided by react-query. It allows you to define a query function which retrieves state in whatever way it likes. It could be http request but it can be anything. The hook provides helpful functionality such as the ability monitor the query progress, error state. It also providing caching and auto-refresh functionality.&lt;/span&gt;&lt;br&gt;&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;labelPosition=center;verticalLabelPosition=middle;align=center;verticalAlign=top;fontStyle=1;fontSize=20;spacing=20;" parent="1" vertex="1">
          <mxGeometry x="566" y="1255" width="520" height="180" as="geometry" />
        </mxCell>
        <mxCell id="jkbdHM3EtRgmcyWO4s81-112" value="Entity Classes&lt;br style=&quot;font-size: 19px;&quot;&gt;&lt;font color=&quot;#575757&quot;&gt;&lt;span style=&quot;font-size: 14px; font-weight: 400;&quot;&gt;We can model our data structures using OO design with entity classes. These entity classes can then be consumed by our useApi() hooks. Entity classes separate&amp;nbsp;domain logic from implementation specific usage and data persistence&amp;nbsp;logic.&lt;/span&gt;&lt;br&gt;&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;labelPosition=center;verticalLabelPosition=middle;align=center;verticalAlign=top;fontStyle=1;fontSize=20;spacing=20;" parent="1" vertex="1">
          <mxGeometry x="26.000000000000007" y="1455" width="514.36" height="180" as="geometry" />
        </mxCell>
        <mxCell id="FN8Ck3nnoSoxogU4fabU-4" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="jkbdHM3EtRgmcyWO4s81-15" target="jkbdHM3EtRgmcyWO4s81-16" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="jkbdHM3EtRgmcyWO4s81-15" value="&lt;font style=&quot;font-size: 14px;&quot;&gt;PersistQueryClientProvider&lt;br&gt;&lt;span style=&quot;font-weight: normal;&quot;&gt;Context provider (useContext()) for react-query. &lt;br&gt;Makes it possible for components nested inside to to share state via methods provided by react-query such as useQuery().&lt;br&gt;Configurable to persist data to the browser.&lt;/span&gt;&lt;br&gt;&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;labelPosition=center;verticalLabelPosition=middle;align=center;verticalAlign=top;fontStyle=1;fontSize=20;spacing=20;" parent="1" vertex="1">
          <mxGeometry x="100" y="247" width="460" height="160" as="geometry" />
        </mxCell>
        <mxCell id="FN8Ck3nnoSoxogU4fabU-23" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;strokeColor=#FF3333;exitX=0;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="FN8Ck3nnoSoxogU4fabU-52" target="jkbdHM3EtRgmcyWO4s81-22" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="FN8Ck3nnoSoxogU4fabU-42" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=1;entryY=0.5;entryDx=0;entryDy=0;fontSize=14;exitX=1;exitY=0.5;exitDx=0;exitDy=0;fontColor=#FF3333;strokeColor=#FF3333;" parent="1" source="FN8Ck3nnoSoxogU4fabU-52" target="FN8Ck3nnoSoxogU4fabU-57" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="FN8Ck3nnoSoxogU4fabU-51" value="useMutation()&lt;br style=&quot;font-size: 19px;&quot;&gt;&lt;font color=&quot;#575757&quot;&gt;&lt;span style=&quot;font-size: 14px; font-weight: 400;&quot;&gt;This is a hook provided by react-query. It allows you to define a query function which modifies state, usually by making a REST API request. It provides functionality for tracking and managing the progress of the mutation.&lt;/span&gt;&lt;br&gt;&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;labelPosition=center;verticalLabelPosition=middle;align=center;verticalAlign=top;fontStyle=1;fontSize=20;spacing=20;" parent="1" vertex="1">
          <mxGeometry x="1099" y="1255" width="520" height="180" as="geometry" />
        </mxCell>
        <mxCell id="FN8Ck3nnoSoxogU4fabU-52" value="&lt;span style=&quot;color: rgb(0, 0, 0); font-family: Helvetica; font-size: 20px; font-weight: 700;&quot;&gt;hooks/useSurvey&lt;/span&gt;&lt;br style=&quot;color: rgb(0, 0, 0); font-family: Helvetica; font-weight: 700; font-size: 19px;&quot;&gt;&lt;font style=&quot;font-family: Helvetica; font-size: 20px; font-weight: 700;&quot; color=&quot;#575757&quot;&gt;&lt;br&gt;&lt;/font&gt;" style="shape=document;whiteSpace=wrap;html=1;boundedLbl=1;fontFamily=Courier New;fontSize=15;fontColor=#333333;spacing=20;fillColor=#f5f5f5;strokeColor=#666666;" parent="1" vertex="1">
          <mxGeometry x="1165" y="634" width="430" height="217.94" as="geometry" />
        </mxCell>
        <mxCell id="FN8Ck3nnoSoxogU4fabU-60" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;strokeColor=#000000;fontFamily=Courier New;fontSize=15;fontColor=#000000;" parent="1" source="FN8Ck3nnoSoxogU4fabU-57" target="FN8Ck3nnoSoxogU4fabU-52" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="FN8Ck3nnoSoxogU4fabU-57" value="&lt;span style=&quot;color: rgb(0, 0, 0); font-family: Helvetica; font-size: 20px; font-weight: 700;&quot;&gt;Query.ts&lt;/span&gt;&lt;br style=&quot;color: rgb(0, 0, 0); font-family: Helvetica; font-weight: 700; font-size: 19px;&quot;&gt;&lt;font style=&quot;font-family: Helvetica; font-size: 20px; font-weight: 700;&quot; color=&quot;#575757&quot;&gt;&lt;span style=&quot;font-size: 14px; font-weight: 400;&quot;&gt;Query exports the queryClient which holds the react-query state and allows other components to access to state via the exported hooks such as useQuery() and useMutation().&lt;/span&gt;&lt;/font&gt;&lt;font style=&quot;font-family: Helvetica; font-size: 20px; font-weight: 700;&quot; color=&quot;#575757&quot;&gt;&lt;br&gt;&lt;/font&gt;" style="shape=document;whiteSpace=wrap;html=1;boundedLbl=1;fontFamily=Courier New;fontSize=15;fontColor=#333333;spacing=20;fillColor=#f5f5f5;strokeColor=#666666;" parent="1" vertex="1">
          <mxGeometry x="1165" y="218.03" width="430" height="217.94" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
